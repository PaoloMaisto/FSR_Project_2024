    %% FIRST METHOD
    % % Inizializza un array per i punti candidati
    % candidatePoints = rand(numPoints, 2) .* [cols, rows];
    % 
    % % Inizializza un array per i punti validi
    % points = [];
    % 
    % % Loop attraverso i punti candidati per selezionare solo quelli validi
    % for i = 1:numPoints
    %     % Arrotonda le coordinate per ottenere indici validi per la mappa
    %     xIndex = round(candidatePoints(i, 1));
    %     yIndex = round(candidatePoints(i, 2));
    % 
    %     % Verifica che gli indici siano all'interno dei limiti della mappa
    %     if xIndex >= 1 && xIndex <= cols && yIndex >= 1 && yIndex <= rows
    %         % Verifica che il punto sia all'interno di un'area navigabile sulla mappa
    %         if map(yIndex, xIndex) == 1
    %             % Verifica delle distanze solo se ci sono punti già generati
    %             if ~isempty(points)
    %                 % Calcola le distanze tra il nuovo punto e tutti i punti esistenti
    %                 distances = sqrt(sum((points - candidatePoints(i, :)).^2, 2));
    % 
    %                 % Verifica che la distanza sia maggiore della distanza minima
    %                 if all(distances >= minDist)
    %                     points = [points; candidatePoints(i, :)];
    %                 end
    %             else
    %                 % Se non ci sono punti generati, aggiungi semplicemente il nuovo punto
    %                 points = [points; candidatePoints(i, :)];
    %             end
    %         end
    %     end
    % end


    % % Loop finché non si generano abbastanza punti validi
    % while size(points, 1) < numPoints
    % 
    %            %% 2 METHOD
    %     % Genera coordinate casuali
    %     newPoint = rand(1, 2) .* [cols, rows];
    % 
    %     % Arrotonda le coordinate per ottenere indici validi per la mappa
    %     xIndex = round(newPoint(1));
    %     yIndex = round(newPoint(2));
    % 
    %     % Verifica che gli indici siano all'interno dei limiti della mappa
    %     if xIndex >= 1 && xIndex <= cols && yIndex >= 1 && yIndex <= rows
    %         % Verifica che il punto sia all'interno di un'area navigabile sulla mappa
    %         if map(yIndex, xIndex) == 1
    %             % Verifica delle distanze solo se ci sono punti già generati
    %             if ~isempty(points)
    %                 % Calcola le distanze tra il nuovo punto e tutti i punti esistenti
    %                 distances = sqrt(sum((points - newPoint).^2, 2));
    % 
    %                 % Verifica che la distanza sia maggiore della distanza minima e minore della distanza massima
    %                 if all(distances >= minDist)  %&& all(distances <= maxDist)
    %                     points = [points; newPoint];
    %                 end
    %             else
    %                 % Se non ci sono punti generati, aggiungi semplicemente il nuovo punto
    %                 points = [points; newPoint];
    %             end
    %         end
    %     end
            
        %% 3 METHOD
        % % Seleziona un indice casuale tra i navigabili
        % randomIndex = navigableIndices(randi(totalNavigable));
        % [y, x] = ind2sub([rows, cols], randomIndex);
        % 
        % % Verifica che la distanza sia maggiore della distanza minima e minore della distanza massima
        % if isempty(points) || (all(sqrt(sum((points - [x, y]).^2, 2)) >= minDist)) %&& all(sqrt(sum((points - [x, y]).^2, 2)) <= maxDist)
        %     points = [points; x, y];
        % end
    % end